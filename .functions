function dockershell() {
    docker run --rm -i -t --entrypoint=/bin/bash "$@"
}

function dockershellsh() {
    docker run --rm -i -t --entrypoint=/bin/sh "$@"
}

function dockershellhere() {
    dirname=${PWD##*/}
    docker run --rm -it --entrypoint=/bin/bash -v `pwd`:/${dirname} -w /${dirname} "$@"
}

function dockershellshhere() {
    docker run --rm -it --entrypoint=/bin/sh -v `pwd`:/${dirname} -w /${dirname} "$@"
}

function lazygit() {
    git add -A
    git commit -m "$1"
    git push
}

function ipinfo() {
  if [ $(bw status | jq -r .status) != "unlocked" ]; then
    bwu
  fi
  local input=""
  if [[ -p /dev/stdin ]]; then
    input=$(cat -)
  else
    input="${@}"
  fi
  if [[ -z "$input" ]]; then
    input=""
  fi
  local token=$(get_password ipinfo)
  curl -s "ipinfo.io/${input}?token=${token}" | jq -r .
}

function get_secret {
  bw get item "$1" --session "$BW_SESSION"
}

function get_password {
  get_secret "$1" | jq -r ".login.password"
}

function select_merge {
  BRANCH=$1
  DOMAIN=$2

  git merge --no-ff --no-commit $BRANCH

  DPs=$(ls data-products)

  for DP in $DPs; do
      CHECKDOMAIN=$(rg ^domain data-products/$DP/env | cut -d '"' -f2)
      if [[ $CHECKDOMAIN != $DOMAIN ]]; then
          git checkout HEAD data-products/$DP/main.tf
      fi
  done
}

function gci {
  git clone git@github.com:ITV/$1
}

function m1-install {
  m1-terraform-provider-helper install $1 -v $2 --custom-build-command "go mod vendor && make fmt && make build"
  
  REGISTRY=$(echo $1 | cut -d "/" -f 1)
  PROVIDER=$(echo $1 | cut -d "/" -f 2)
  VERSION=$(echo $2 | sed -e "s/^v//")

  mkdir -p ~/.terraform.d/providercache_tf14on/$PROVIDER/$VERSION/registry.terraform.io/$REGISTRY/$PROVIDER/$VERSION/darwin_arm64/
  cp ~/.terraform.d/plugins/registry.terraform.io/$REGISTRY/$PROVIDER/$VERSION/darwin_arm64/* ~/.terraform.d/providercache_tf14on/$PROVIDER/$VERSION/registry.terraform.io/$REGISTRY/$PROVIDER/$VERSION/darwin_arm64/
}
